<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TooSmallPaletteError" xml:space="preserve">
    <value>Palette size must be greater than one</value>
  </data>
  <data name="PluginModuleNotFoundError" xml:space="preserve">
    <value>Module not found</value>
  </data>
  <data name="PluginUnsupportedArchitectureError" xml:space="preserve">
    <value>Unsupported plugin architecture ({0})</value>
  </data>
  <data name="PluginUnknownPeHeaderError" xml:space="preserve">
    <value>Invalid DLL (can't find PE header)</value>
  </data>
  <data name="PluginUnknownArchitectureError" xml:space="preserve">
    <value>Invalid DLL (unknown machine type)</value>
  </data>
  <data name="PluginMethodNotFoundError" xml:space="preserve">
    <value>Incompatible Apophysis plugin</value>
  </data>
  <data name="UnexpectedXmlTagError" xml:space="preserve">
    <value>Expected XML node "{0}" but received "{1}"</value>
  </data>
  <data name="FlameNameMessageHeader" xml:space="preserve">
    <value>Flame "{0}"</value>
  </data>
  <data name="FlameVersionMismatch" xml:space="preserve">
    <value>The flame was created with a different version of Apophysis or a different software and might not render correctly.</value>
  </data>
  <data name="FlameSizeRangeError" xml:space="preserve">
    <value>Size must be greater than zero in both dimensions</value>
  </data>
  <data name="FlamePixelsPerUnitRangeError" xml:space="preserve">
    <value>Scale must be greater than zero</value>
  </data>
  <data name="FlameCameraDofRangeError" xml:space="preserve">
    <value>Depth of field must be greater than or equal to zero</value>
  </data>
  <data name="FlameBrightnessRangeError" xml:space="preserve">
    <value>Brightness must be greater than zero</value>
  </data>
  <data name="FlameGammaRangeError" xml:space="preserve">
    <value>Gamma must be greater than or equal to one</value>
  </data>
  <data name="FlameGammaThresholdRangeError" xml:space="preserve">
    <value>Gamma threshold must be greater than or equal to zero</value>
  </data>
  <data name="FlameVibrancyRangeError" xml:space="preserve">
    <value>Vibrancy must be greater than or equal to zero</value>
  </data>
  <data name="FlameMissingPaletteTagError" xml:space="preserve">
    <value>No descendant node "palette" found</value>
  </data>
  <data name="FlameSuccessMessage" xml:space="preserve">
    <value>Done!</value>
  </data>
  <data name="FlameErrorMessage" xml:space="preserve">
    <value>Error: {0}</value>
  </data>
  <data name="InitializationLoadingGuiMessage" xml:space="preserve">
    <value>Loading GUI</value>
  </data>
  <data name="InitializationMessage" xml:space="preserve">
    <value>Initializing</value>
  </data>
  <data name="InitializationLoadingVariationsMessage" xml:space="preserve">
    <value>Loading variations</value>
  </data>
  <data name="VariationInitializationCollectiveError" xml:space="preserve">
    <value>The following plugins could not be loaded:

{0}</value>
  </data>
  <data name="UnhandledExceptionSaveMessage" xml:space="preserve">
    <value>The details have been written to "{0}"</value>
  </data>
  <data name="UnhandledExceptionSaveFailureMessage" xml:space="preserve">
    <value>Sadly, the details could not be written to "{0}" because of the following error: {1}</value>
  </data>
  <data name="UnhandledExceptionMessage" xml:space="preserve">
    <value>Apophysis encountered an unhandled exception. {0}

Message: {1}
Location: {2}</value>
  </data>
  <data name="EmptyFlameCollectionError" xml:space="preserve">
    <value>Can't remove last flame from batch</value>
  </data>
  <data name="FlameCollectionNoChildTagsError" xml:space="preserve">
    <value>No flames in batch</value>
  </data>
	<data name="FlameErrorWrapper" xml:space="preserve">
    <value>Flame "{0}": {1}</value>
  </data>
	<data name="IteratorWeightRangeError" xml:space="preserve">
    <value>Weight must not be less or equal to 0</value>
  </data>
	<data name="IteratorColorRangeError" xml:space="preserve">
    <value>Color must be be in the range 0 - 1</value>
  </data>
	<data name="IteratorColorSpeedRangeError" xml:space="preserve">
    <value>Color speed must be be in the range -1 - 1</value>
  </data>
	<data name="IteratorOpacityRangeError" xml:space="preserve">
    <value>Opacity must be be in the range 0 - 1</value>
  </data>
	<data name="IteratorDirectColorRangeError" xml:space="preserve">
    <value>DirectColor must be be in the range 0 - 1</value>
  </data>
	<data name="IteratorUnknownAttributeError" xml:space="preserve">
    <value>Potentially missing variation or variable: {0}</value>
  </data>
	<data name="IteratorCollectionRemovingLastPrimaryIteratorError" xml:space="preserve">
    <value>Can't remove last primary iterator of flame</value>
  </data>
	<data name="IteratorCollectionNoChildTagsError" xml:space="preserve">
    <value>No transforms in flame</value>
  </data>
	<data name="IteratorErrorWrapper" xml:space="preserve">
    <value>Transform #{0}: {1}</value>
  </data>
	<data name="MismatchingPaletteArraysError" xml:space="preserve">
    <value>Mismatching palette arrays</value>
  </data>
	<data name="PluginAlreadyLoadedError" xml:space="preserve">
    <value>The plugin "{0}" seems to be loaded already.</value>
  </data>
	<data name="GenericPluginError" xml:space="preserve">
    <value>Error loading library "{0}": {1}</value>
  </data>
	<data name="LoadingPluginErrorLogMessage" xml:space="preserve">
    <value>Error loading "{0}": {1}</value>
  </data>
	<data name="BadPluginMessageFileContent" xml:space="preserve">
    <value>The plugin file "{0}" caused errors when Apophysis attempted to load it. As long as this file exists, it will not be loaded again. Delete the file if you re-enable the plugin.</value>
  </data>
	<data name="GenericProblemListExceedsMaxSizeMessage" xml:space="preserve">
    <value>A full list of problems can be found in the message window (F8)</value>
  </data>
	<data name="DirectoryDoesntExistError" xml:space="preserve">
    <value>Directory must exist</value>
  </data>
	<data name="DirectoryDoesntExistUiError" xml:space="preserve">
    <value>The directory must exist.</value>
  </data>
	<data name="SettingsRequireRestartNotice" xml:space="preserve">
    <value>Some settings will be applied once Apophysis restarted.</value>
  </data>
	<data name="BatchModeSelectPathHintText" xml:space="preserve">
    <value>Select the folder to save the result images in</value>
  </data>
	<data name="SingleModeSelectPathHintText" xml:space="preserve">
    <value>Select target file...</value>
  </data>
</root>